{"version":3,"sources":["actions/index.js","components/FloorsModel.js","components/FloorsScene.js","components/InfoWindow.js","App.js","serviceWorker.js","reducers/setClickedFloor.js","reducers/setClickedRoom.js","reducers/allReducers.js","index.js"],"names":["setClickedFloor","index","type","payload","setClickedRoom","FloorsModel","clickedFloor","clickedRoom","clickCount","onClickedFloorChange","onClickedRoomChange","buildingRef","useRef","floorRefs","materialRefs","roomRefs","sideRefs","useFrame","current","rotation","y","forEach","ref","indexDifference","Math","abs","opacity","roomRef","position","useState","hoveredFloor","setHoveredFloor","hoveredRoom","setHoveredRoom","nodes","useLoader","GLTFLoader","floorRooms","floor_room_0_1","floor_room_1_1","floor_room_2_1","floor_room_3_1","floor_room_4_1","floor_room_5_1","hoveredOnFloor","mouseInside","hoveredOnRoom","floorIndex","roomIndex","event","stopPropagation","convertDegreesToRadians","x","z","degrees","map","degree","PI","floorObject","key","e","dispose","onPointerOver","onPointerOut","intersections","length","onClick","geometry","floor_top_1","attach","transparent","color","floor_side_1","floorRoom","extend","OrbitControls","softShadows","CameraControls","useThree","camera","domElement","gl","controls","state","update","args","minDistance","mapDispatchToProps","connect","className","colorManagement","shadowMap","fov","intensity","fallback","style","right","icon","faTimes","display","App","Boolean","window","location","hostname","match","initialState","action","combineReducers","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20300946.chunk.js","sourcesContent":["export const setClickedFloor = (index) => {\r\n  return {\r\n    type: \"SET_CLICKED_FLOOR\",\r\n    payload: index\r\n  };\r\n};\r\nexport const setClickedRoom = (index) => {\r\n  return {\r\n    type: \"SET_CLICKED_ROOM\",\r\n    payload: index\r\n  };\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useFrame, useLoader } from \"react-three-fiber\";\r\n\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nconst FloorsModel = ({ clickedFloor, clickedRoom, clickCount, onClickedFloorChange, onClickedRoomChange }) => {\r\n  const buildingRef = useRef();\r\n  const floorRefs = useRef([]);\r\n  const materialRefs = useRef([]);\r\n  const roomRefs = useRef([[], [], [], [], []]);\r\n  const sideRefs = useRef([]);\r\n\r\n  useFrame(() => {\r\n    //   const t = state.clock.getElapsedTime();\r\n    const animationSpeed = 2;\r\n    buildingRef.current.rotation.y += 0.001;\r\n    if (clickedFloor !== null) {\r\n      floorRefs.current.forEach((ref, index) => {\r\n        let indexDifference = Math.abs(clickedFloor - index);\r\n        if (clickedFloor !== index) {\r\n          materialRefs.current[index].opacity = 0.2;\r\n          sideRefs.current[index].opacity = 0.2;\r\n          roomRefs.current[index].forEach((roomRef) => {\r\n            roomRef.opacity = 0.2;\r\n          });\r\n          if (clickedFloor < index) {\r\n            if (ref.position.y < index * 10 + indexDifference * 30) {\r\n              ref.position.y += animationSpeed;\r\n            }\r\n          } else {\r\n            if (ref.position.y > index * 10 - indexDifference * 30) {\r\n              ref.position.y -= animationSpeed;\r\n            }\r\n          }\r\n        } else {\r\n          if (ref.position.y < index * 10) {\r\n            ref.position.y += animationSpeed;\r\n          }\r\n        }\r\n      });\r\n    } else if (clickCount !== 0) {\r\n      floorRefs.current.forEach((ref, index) => {\r\n        roomRefs.current[index].forEach((roomRef) => {\r\n          roomRef.opacity = 1;\r\n        });\r\n        if (ref.position.y > index * 10) {\r\n          materialRefs.current[index].opacity = 1;\r\n          sideRefs.current[index].opacity = 1;\r\n          //   materialRefs.current[index].opacity += 0.1;\r\n          ref.position.y -= animationSpeed;\r\n        } else if (ref.position.y < index * 10) {\r\n          materialRefs.current[index].opacity = 1;\r\n          sideRefs.current[index].opacity = 1;\r\n          //  materialRefs.current[index].opacity += 0.1;\r\n          ref.position.y += animationSpeed;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const [hoveredFloor, setHoveredFloor] = useState(null);\r\n  const [hoveredRoom, setHoveredRoom] = useState(null);\r\n\r\n  const { nodes } = useLoader(GLTFLoader, \"./models/floor01.glb\");\r\n\r\n  const floorRooms = [\r\n    nodes.floor_room_0_1,\r\n    nodes.floor_room_1_1,\r\n    nodes.floor_room_2_1,\r\n    nodes.floor_room_3_1,\r\n    nodes.floor_room_4_1,\r\n    nodes.floor_room_5_1\r\n  ];\r\n\r\n  const hoveredOnFloor = (index, mouseInside) => {\r\n    if (clickedFloor === null) {\r\n      if (mouseInside) {\r\n        setHoveredFloor(index);\r\n      } else if (hoveredFloor === index) {\r\n        setHoveredFloor(null);\r\n      }\r\n    } else {\r\n      setHoveredFloor(null);\r\n    }\r\n  };\r\n\r\n  const clickedOnFloor = (index) => {\r\n    if (clickedFloor === null) {\r\n      onClickedFloorChange(index);\r\n      setHoveredFloor([false, false, false, false, false]);\r\n    }\r\n    // else if (clickedFloor === index) {\r\n    //   onClickedFloorChange(null);\r\n    // }\r\n  };\r\n\r\n  const clickedOnRoom = (index, event) => {\r\n    if (clickedFloor !== null) {\r\n      event.stopPropagation();\r\n      onClickedRoomChange(index);\r\n    }\r\n  };\r\n\r\n  const hoveredOnRoom = (floorIndex, roomIndex, mouseInside, event) => {\r\n    if (clickedFloor !== null && clickedFloor === floorIndex) {\r\n      event.stopPropagation();\r\n\r\n      if (mouseInside) {\r\n        setHoveredRoom(roomIndex);\r\n      } else if (hoveredRoom === roomIndex) {\r\n        setHoveredRoom(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const convertDegreesToRadians = (x, y, z) => {\r\n    let degrees = [x, y, z];\r\n    return (degrees = degrees.map((degree) => degree * (Math.PI / 180)));\r\n  };\r\n\r\n  const floorObjects = [0, 1, 2, 3, 4];\r\n  return (\r\n    <group ref={buildingRef}>\r\n      {floorObjects.map((floorObject, floorIndex) => (\r\n        <group\r\n          key={floorIndex}\r\n          ref={(e) => (floorRefs.current[floorIndex] = e)}\r\n          position={[0, 10 * floorIndex, 0]}\r\n          rotation={convertDegreesToRadians(90, 180, 0)}\r\n        >\r\n          <mesh\r\n            dispose={null}\r\n            onPointerOver={(e) => {\r\n              e.stopPropagation();\r\n              hoveredOnFloor(floorIndex, true);\r\n            }}\r\n            onPointerOut={(e) => {\r\n              e.intersections.length && hoveredOnFloor(floorIndex, false);\r\n            }}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              clickedOnFloor(floorIndex);\r\n            }}\r\n            geometry={nodes.floor_top_1.geometry}\r\n          >\r\n            <meshStandardMaterial\r\n              attach=\"material\"\r\n              ref={(e) => (materialRefs.current[floorIndex] = e)}\r\n              transparent={true}\r\n              color={\"white\"}\r\n            />\r\n          </mesh>\r\n          <mesh geometry={nodes.floor_side_1.geometry}>\r\n            <meshStandardMaterial\r\n              attach=\"material\"\r\n              ref={(e) => (sideRefs.current[floorIndex] = e)}\r\n              transparent={true}\r\n              color={hoveredFloor === floorIndex ? \"#00FBFF\" : \"grey\"}\r\n            />\r\n          </mesh>\r\n          {floorRooms.map((floorRoom, roomIndex) => (\r\n            <group key={roomIndex}>\r\n              <mesh\r\n                geometry={floorRoom.geometry}\r\n                onPointerOver={(e) => {\r\n                  hoveredOnRoom(floorIndex, roomIndex, true, e);\r\n                }}\r\n                onPointerOut={(e) => {\r\n                  hoveredOnRoom(floorIndex, roomIndex, false, e);\r\n                }}\r\n                onClick={(e) => {\r\n                  clickedOnRoom(roomIndex, e);\r\n                }}\r\n              >\r\n                <meshStandardMaterial\r\n                  attach=\"material\"\r\n                  ref={(e) => (roomRefs.current[floorIndex][roomIndex] = e)}\r\n                  transparent={true}\r\n                  color={\r\n                    (clickedFloor === floorIndex && hoveredRoom === roomIndex) || (clickedFloor === floorIndex && clickedRoom === roomIndex)\r\n                      ? \"yellow\"\r\n                      : \"#E3E3E3\"\r\n                  }\r\n                />\r\n              </mesh>\r\n            </group>\r\n          ))}\r\n        </group>\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default FloorsModel;\r\n","import React, { useRef, useState, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setClickedFloor, setClickedRoom } from \"../actions\";\r\nimport { Canvas, useFrame, useThree, extend } from \"react-three-fiber\";\r\nimport { softShadows } from \"drei\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport FloorsModel from \"./FloorsModel\";\r\n\r\n//\"homepage\": \"http://https://robertasliekis.github.io/3d-floors/\",\r\n\r\nextend({ OrbitControls });\r\n\r\nsoftShadows();\r\n\r\nconst CameraControls = () => {\r\n  const {\r\n    camera,\r\n    gl: { domElement }\r\n  } = useThree();\r\n  const controls = useRef();\r\n  useFrame((state) => controls.current.update());\r\n  return <orbitControls ref={controls} args={[camera, domElement]} minDistance={150} />;\r\n};\r\n\r\nfunction FloorsScene({ clickedFloor, clickedRoom, clickCount, setClickedFloor, setClickedRoom }) {\r\n  const clickedFloorChange = (index) => {\r\n    setClickedFloor(index);\r\n  };\r\n  const clickedRoomChange = (index) => {\r\n    setClickedRoom(index);\r\n  };\r\n  return (\r\n    <div className=\"floor-model-container\">\r\n      <Canvas colorManagement shadowMap camera={{ position: [10, 15, -20], fov: 60 }}>\r\n        <CameraControls />\r\n        <ambientLight intensity={0.6} />\r\n        <pointLight position={[-10, 100, -20]} intensity={0.5} />\r\n        <group>\r\n          <Suspense fallback={null}>\r\n            <FloorsModel\r\n              onClickedFloorChange={clickedFloorChange}\r\n              onClickedRoomChange={clickedRoomChange}\r\n              clickedFloor={clickedFloor}\r\n              clickedRoom={clickedRoom}\r\n              clickCount={clickCount}\r\n            />\r\n          </Suspense>\r\n        </group>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clickedFloor: state.setClickedFloor.clickedFloor,\r\n    clickedRoom: state.setClickedRoom.clickedRoom,\r\n    clickCount: state.setClickedFloor.clickCount\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setClickedFloor,\r\n  setClickedRoom\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FloorsScene);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { setClickedFloor, setClickedRoom } from \"../actions\";\r\n\r\nfunction InfoWindow({ clickedFloor, clickedRoom, setClickedFloor, setClickedRoom }) {\r\n  const floorText = [\r\n    \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Impedit, veniam dignissimos odit repudiandae iste id fugiat tenetur necessitatibus amet aspernatur voluptas dolorem deserunt dolores, reprehenderit minima! Asperiores,  praesentium delectus optio perspiciatis quae est ea.\",\r\n    \"Sit, amet consectetur adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Dolor sit, amet consectetur adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\"\r\n  ];\r\n  const roomText = [\r\n    \"Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Impedit, veniam dignissimos odit repudiandae iste id fugiat tenetur necessitatibus amet aspernatur voluptas dolorem deserunt dolores, reprehenderit minima! Asperiores,  praesentium delectus optio perspiciatis quae est ea.\",\r\n    \"Sit, amet consectetur adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Dolor sit, amet consectetur adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\",\r\n    \"Adipisicing elit. Ipsa explicabo, alias a eum cumque vel praesentium dolores consequuntur debitis blanditiis perferendis tempore tenetur qui. Esse odio aperiam rerum reiciendis soluta.\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"info-window\" style={{ right: clickedFloor !== null ? \"0%\" : \"-100%\" }}>\r\n      <div\r\n        className=\"btn btn-close\"\r\n        onClick={() => {\r\n          setClickedFloor(null);\r\n          setClickedRoom(null);\r\n        }}\r\n      >\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n      </div>\r\n      <div className=\"floor-container container\">\r\n        <h1>{`Floor ${clickedFloor + 1}`}</h1>\r\n        <p>{floorText[clickedFloor]}</p>\r\n      </div>\r\n      <div className=\"room-container container\" style={{ display: clickedRoom !== null ? \"flex\" : \"none\" }}>\r\n        <h1>{`Room ${clickedRoom + 1}`}</h1>\r\n        <p>{roomText[clickedRoom]}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clickedFloor: state.setClickedFloor.clickedFloor,\r\n    clickedRoom: state.setClickedRoom.clickedRoom\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setClickedFloor,\r\n  setClickedRoom\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoWindow);\r\n","import React from \"react\";\nimport FloorsScene from \"./components/FloorsScene\";\nimport InfoWindow from \"./components/InfoWindow\";\n\n//\"homepage\": \"//https://robertasliekis.github.io/3d-floors/\",\n\nfunction App() {\n  return (\n    <div className=\"website-wrapper\">\n      <FloorsScene />\n      <InfoWindow />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  clickedFloor: null,\r\n  clickCount: 0\r\n};\r\n\r\nconst setClickedFloor = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CLICKED_FLOOR\":\r\n      return { ...state, clickedFloor: action.payload, clickCount: state.clickCount + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setClickedFloor;\r\n","const initialState = {\r\n  clickedRoom: null,\r\n  clickCount: 0\r\n};\r\n\r\nconst setClickedRoom = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CLICKED_ROOM\":\r\n      return { ...state, clickedRoom: action.payload, clickCount: state.clickCount + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setClickedRoom;\r\n","import { combineReducers } from \"redux\";\r\nimport setClickedFloor from \"./setClickedFloor\";\r\nimport setClickedRoom from \"./setClickedRoom\";\r\n\r\nexport default combineReducers({\r\n  setClickedFloor: setClickedFloor,\r\n  setClickedRoom: setClickedRoom\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers/allReducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}